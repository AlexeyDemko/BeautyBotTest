TEST_TEXT_1 = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:
‚åöÔ∏è {day_month} –≤ {start_time} - {day_of_week} - {end_time}
üë© {master}
–£—Å–ª—É–≥–∏:
{services}
—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—å—é {record_link}'''

TEST_TEXT_2 = '''{name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –∏–∑–º–µ–Ω–µ–Ω–∞:
‚åöÔ∏è {day_month} –≤ {start_time}
üë© {master}
–£—Å–ª—É–≥–∏:
{services}
—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—å—é {record_link}'''


def verify_text(test_text, list_keys):
    for key in list_keys:
        placeholder = key
        if placeholder not in test_text:
            return f"–û—à–∏–±–∫–∞: –ö–ª—é—á '{key}' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ."

    open_brackets = test_text.count('{')
    close_brackets = test_text.count('}')

    if open_brackets != close_brackets:
        return "–û—à–∏–±–∫–∞: –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫."

    return f"–¢–µ–∫—Å—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω:\n{test_text}"


list_keys = ['name', 'day_month', 'day_of_week', 'start_time', 'end_time', 'master', 'services']

res_1 = verify_text(TEST_TEXT_1, list_keys)
res_2 = verify_text(TEST_TEXT_2, list_keys)
print(res_1)
print(res_2)
